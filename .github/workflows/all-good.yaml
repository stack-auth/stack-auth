name: All good?

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

jobs:
  all-good:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      statuses: write
      checks: write
    steps:
      - name: Wait for 60 seconds
        run: sleep 6

      - name: Wait for all status checks to finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          COMMIT: ${{ github.sha }}
        run: |
          echo "Checking status checks for commit ${COMMIT} in repo ${REPO}..."
          echo "Checking status checks for commit ${COMMIT} in repo ${REPO}..."
          while true; do
            # Fetch Check Runs for the commit (Checks API)
            check_runs_response=$(curl -s -H "Authorization: Bearer ${GITHUB_TOKEN}" \
              "https://api.github.com/repos/${REPO}/commits/${COMMIT}/check-runs")
            # Fetch legacy statuses for the commit (Statuses API)
            statuses_response=$(curl -s -H "Authorization: Bearer ${GITHUB_TOKEN}" \
              "https://api.github.com/repos/${REPO}/commits/${COMMIT}/status")

            echo "Check runs response: $check_runs_response"
            echo "Statuses response: $statuses_response"

            # Count check runs that are not yet complete
            pending_check_runs=$(echo "$check_runs_response" | jq '[.check_runs[] | select(.status != "completed")] | length')
            # Count legacy statuses that are still pending
            pending_statuses=$(echo "$statuses_response" | jq '[.statuses[] | select(.state == "pending")] | length')

            if [ "$pending_check_runs" -gt 0 ] || [ "$pending_statuses" -gt 0 ]; then
              echo "$pending_check_runs check run(s) and $pending_statuses legacy status(es) still pending. Waiting..."
              sleep 10
              continue
            fi

            # Count check runs that didn't succeed
            failed_check_runs=$(echo "$check_runs_response" | jq '[.check_runs[] | select(.conclusion != "success")] | length')
            # Count legacy statuses that are not "success"
            failed_statuses=$(echo "$statuses_response" | jq '[.statuses[] | select(.state != "success")] | length')

            if [ "$failed_check_runs" -eq 0 ] && [ "$failed_statuses" -eq 0 ]; then
              echo "All status checks passed!"
              exit 0
            else
              echo "Some status checks failed. Exiting with error."
              exit 1
            fi
          done
