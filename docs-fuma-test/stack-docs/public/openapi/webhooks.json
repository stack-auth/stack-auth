{
  "openapi": "3.1.0",
  "info": {
    "title": "Stack Webhooks API",
    "version": "1.0.0"
  },
  "webhooks": {
    "user.created": {
      "post": {
        "summary": "user.created",
        "description": "This event is triggered when a user is created.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "user.created",
                    "description": "user.created"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "3241a285-8329-4d69-8f3d-316e08cf140c",
                        "description": "The unique identifier of the user"
                      },
                      "primary_email": {
                        "type": "string",
                        "example": "johndoe@example.com",
                        "description": "Primary email"
                      },
                      "primary_email_verified": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether the primary email has been verified to belong to this user"
                      },
                      "primary_email_auth_enabled": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether the primary email is used for authentication. If this is set to `false`, the user will not be able to sign in with the primary email with password or OTP"
                      },
                      "display_name": {
                        "type": "string",
                        "example": "John Doe",
                        "description": "Human-readable user display name. This is not a unique identifier."
                      },
                      "selected_team": {
                        "type": "object",
                        "properties": {
                          "created_at_millis": {
                            "type": "number",
                            "example": 1630000000000,
                            "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
                          },
                          "server_metadata": {
                            "type": "object",
                            "example": {
                              "key": "value"
                            },
                            "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
                          },
                          "id": {
                            "type": "string",
                            "example": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                            "description": "The unique identifier of the team"
                          },
                          "display_name": {
                            "type": "string",
                            "example": "My Team",
                            "description": "Human-readable team display name. This is not a unique identifier."
                          },
                          "profile_image_url": {
                            "type": "string",
                            "example": "https://example.com/image.jpg",
                            "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
                          },
                          "client_metadata": {
                            "type": "object",
                            "example": {
                              "key": "value"
                            },
                            "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
                          },
                          "client_read_only_metadata": {
                            "type": "object",
                            "example": {
                              "key": "value"
                            },
                            "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
                          }
                        },
                        "required": [
                          "created_at_millis",
                          "id",
                          "display_name"
                        ]
                      },
                      "selected_team_id": {
                        "type": "string",
                        "example": "team-id",
                        "description": "ID of the team currently selected by the user"
                      },
                      "profile_image_url": {
                        "type": "string",
                        "example": "https://example.com/image.jpg",
                        "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
                      },
                      "signed_up_at_millis": {
                        "type": "number",
                        "example": 1630000000000,
                        "description": "The time the user signed up (identify) => `(the number of milliseconds since epoch, January 1, 1970, UTC)`"
                      },
                      "client_metadata": {
                        "type": "object",
                        "example": {
                          "key": "value"
                        },
                        "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
                      },
                      "client_read_only_metadata": {
                        "type": "object",
                        "example": {
                          "key": "value"
                        },
                        "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
                      },
                      "server_metadata": {
                        "type": "object",
                        "example": {
                          "key": "value"
                        },
                        "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the user here."
                      },
                      "last_active_at_millis": {
                        "type": "number",
                        "example": 1630000000000,
                        "description": "The time the user was last active (identify) => `(the number of milliseconds since epoch, January 1, 1970, UTC)`"
                      },
                      "is_anonymous": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "primary_email_verified",
                      "primary_email_auth_enabled",
                      "signed_up_at_millis",
                      "last_active_at_millis",
                      "is_anonymous"
                    ]
                  }
                },
                "required": [
                  "type",
                  "data"
                ],
                "example": {
                  "type": "user.created"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "operationId": "user.created"
      }
    },
    "user.updated": {
      "post": {
        "summary": "user.updated",
        "description": "This event is triggered when a user is updated.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "user.updated",
                    "description": "user.updated"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "3241a285-8329-4d69-8f3d-316e08cf140c",
                        "description": "The unique identifier of the user"
                      },
                      "primary_email": {
                        "type": "string",
                        "example": "johndoe@example.com",
                        "description": "Primary email"
                      },
                      "primary_email_verified": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether the primary email has been verified to belong to this user"
                      },
                      "primary_email_auth_enabled": {
                        "type": "boolean",
                        "example": true,
                        "description": "Whether the primary email is used for authentication. If this is set to `false`, the user will not be able to sign in with the primary email with password or OTP"
                      },
                      "display_name": {
                        "type": "string",
                        "example": "John Doe",
                        "description": "Human-readable user display name. This is not a unique identifier."
                      },
                      "selected_team": {
                        "type": "object",
                        "properties": {
                          "created_at_millis": {
                            "type": "number",
                            "example": 1630000000000,
                            "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
                          },
                          "server_metadata": {
                            "type": "object",
                            "example": {
                              "key": "value"
                            },
                            "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
                          },
                          "id": {
                            "type": "string",
                            "example": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                            "description": "The unique identifier of the team"
                          },
                          "display_name": {
                            "type": "string",
                            "example": "My Team",
                            "description": "Human-readable team display name. This is not a unique identifier."
                          },
                          "profile_image_url": {
                            "type": "string",
                            "example": "https://example.com/image.jpg",
                            "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
                          },
                          "client_metadata": {
                            "type": "object",
                            "example": {
                              "key": "value"
                            },
                            "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
                          },
                          "client_read_only_metadata": {
                            "type": "object",
                            "example": {
                              "key": "value"
                            },
                            "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
                          }
                        },
                        "required": [
                          "created_at_millis",
                          "id",
                          "display_name"
                        ]
                      },
                      "selected_team_id": {
                        "type": "string",
                        "example": "team-id",
                        "description": "ID of the team currently selected by the user"
                      },
                      "profile_image_url": {
                        "type": "string",
                        "example": "https://example.com/image.jpg",
                        "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
                      },
                      "signed_up_at_millis": {
                        "type": "number",
                        "example": 1630000000000,
                        "description": "The time the user signed up (identify) => `(the number of milliseconds since epoch, January 1, 1970, UTC)`"
                      },
                      "client_metadata": {
                        "type": "object",
                        "example": {
                          "key": "value"
                        },
                        "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
                      },
                      "client_read_only_metadata": {
                        "type": "object",
                        "example": {
                          "key": "value"
                        },
                        "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
                      },
                      "server_metadata": {
                        "type": "object",
                        "example": {
                          "key": "value"
                        },
                        "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the user here."
                      },
                      "last_active_at_millis": {
                        "type": "number",
                        "example": 1630000000000,
                        "description": "The time the user was last active (identify) => `(the number of milliseconds since epoch, January 1, 1970, UTC)`"
                      },
                      "is_anonymous": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "primary_email_verified",
                      "primary_email_auth_enabled",
                      "signed_up_at_millis",
                      "last_active_at_millis",
                      "is_anonymous"
                    ]
                  }
                },
                "required": [
                  "type",
                  "data"
                ],
                "example": {
                  "type": "user.updated"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "operationId": "user.updated"
      }
    },
    "user.deleted": {
      "post": {
        "summary": "user.deleted",
        "description": "This event is triggered when a user is deleted.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "user.deleted",
                    "description": "user.deleted"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "3241a285-8329-4d69-8f3d-316e08cf140c",
                        "description": "The unique identifier of the user"
                      },
                      "teams": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      }
                    },
                    "required": [
                      "id",
                      "teams"
                    ]
                  }
                },
                "required": [
                  "type",
                  "data"
                ],
                "example": {
                  "type": "user.deleted"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "operationId": "user.deleted"
      }
    },
    "team.created": {
      "post": {
        "summary": "team.created",
        "description": "This event is triggered when a team is created.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "team.created",
                    "description": "team.created"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "created_at_millis": {
                        "type": "number",
                        "example": 1630000000000,
                        "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
                      },
                      "server_metadata": {
                        "type": "object",
                        "example": {
                          "key": "value"
                        },
                        "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
                      },
                      "id": {
                        "type": "string",
                        "example": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                        "description": "The unique identifier of the team"
                      },
                      "display_name": {
                        "type": "string",
                        "example": "My Team",
                        "description": "Human-readable team display name. This is not a unique identifier."
                      },
                      "profile_image_url": {
                        "type": "string",
                        "example": "https://example.com/image.jpg",
                        "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
                      },
                      "client_metadata": {
                        "type": "object",
                        "example": {
                          "key": "value"
                        },
                        "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
                      },
                      "client_read_only_metadata": {
                        "type": "object",
                        "example": {
                          "key": "value"
                        },
                        "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
                      }
                    },
                    "required": [
                      "created_at_millis",
                      "id",
                      "display_name"
                    ]
                  }
                },
                "required": [
                  "type",
                  "data"
                ],
                "example": {
                  "type": "team.created"
                }
              }
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "operationId": "team.created"
      }
    },
    "team.updated": {
      "post": {
        "summary": "team.updated",
        "description": "This event is triggered when a team is updated.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "team.updated",
                    "description": "team.updated"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "created_at_millis": {
                        "type": "number",
                        "example": 1630000000000,
                        "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
                      },
                      "server_metadata": {
                        "type": "object",
                        "example": {
                          "key": "value"
                        },
                        "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
                      },
                      "id": {
                        "type": "string",
                        "example": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                        "description": "The unique identifier of the team"
                      },
                      "display_name": {
                        "type": "string",
                        "example": "My Team",
                        "description": "Human-readable team display name. This is not a unique identifier."
                      },
                      "profile_image_url": {
                        "type": "string",
                        "example": "https://example.com/image.jpg",
                        "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
                      },
                      "client_metadata": {
                        "type": "object",
                        "example": {
                          "key": "value"
                        },
                        "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
                      },
                      "client_read_only_metadata": {
                        "type": "object",
                        "example": {
                          "key": "value"
                        },
                        "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
                      }
                    },
                    "required": [
                      "created_at_millis",
                      "id",
                      "display_name"
                    ]
                  }
                },
                "required": [
                  "type",
                  "data"
                ],
                "example": {
                  "type": "team.updated"
                }
              }
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "operationId": "team.updated"
      }
    },
    "team.deleted": {
      "post": {
        "summary": "team.deleted",
        "description": "This event is triggered when a team is deleted.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "team.deleted",
                    "description": "team.deleted"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "3241a285-8329-4d69-8f3d-316e08cf140c",
                        "description": "The unique identifier of the user"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "required": [
                  "type",
                  "data"
                ],
                "example": {
                  "type": "team.deleted"
                }
              }
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "operationId": "team.deleted"
      }
    },
    "team_membership.created": {
      "post": {
        "summary": "team_membership.created",
        "description": "This event is triggered when a user is added to a team.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "team_membership.created",
                    "description": "team_membership.created"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "team_id": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "team_id",
                      "user_id"
                    ]
                  }
                },
                "required": [
                  "type",
                  "data"
                ],
                "example": {
                  "type": "team_membership.created"
                }
              }
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "operationId": "team_membership.created"
      }
    },
    "team_membership.deleted": {
      "post": {
        "summary": "team_membership.deleted",
        "description": "This event is triggered when a user is removed from a team.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "team_membership.deleted",
                    "description": "team_membership.deleted"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "team_id": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "team_id",
                      "user_id"
                    ]
                  }
                },
                "required": [
                  "type",
                  "data"
                ],
                "example": {
                  "type": "team_membership.deleted"
                }
              }
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "operationId": "team_membership.deleted"
      }
    },
    "team_permission.created": {
      "post": {
        "summary": "team_permission.created",
        "description": "This event is triggered when a team permission is created.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "team_permission.created",
                    "description": "team_permission.created"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "read_secret_info",
                        "description": "The permission ID used to uniquely identify a permission. Can either be a custom permission with lowercase letters, numbers, `:`, and `_` characters, or one of the system permissions: `$update_team`, `$delete_team`, `$read_members`, `$remove_members`, `$invite_members`, `$manage_api_keys`"
                      },
                      "user_id": {
                        "type": "string",
                        "example": "3241a285-8329-4d69-8f3d-316e08cf140c",
                        "description": "The unique identifier of the user"
                      },
                      "team_id": {
                        "type": "string",
                        "example": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                        "description": "The unique identifier of the team"
                      }
                    },
                    "required": [
                      "id",
                      "user_id",
                      "team_id"
                    ]
                  }
                },
                "required": [
                  "type",
                  "data"
                ],
                "example": {
                  "type": "team_permission.created"
                }
              }
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "operationId": "team_permission.created"
      }
    },
    "team_permission.deleted": {
      "post": {
        "summary": "team_permission.deleted",
        "description": "This event is triggered when a team permission is deleted.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "team_permission.deleted",
                    "description": "team_permission.deleted"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "read_secret_info",
                        "description": "The permission ID used to uniquely identify a permission. Can either be a custom permission with lowercase letters, numbers, `:`, and `_` characters, or one of the system permissions: `$update_team`, `$delete_team`, `$read_members`, `$remove_members`, `$invite_members`, `$manage_api_keys`"
                      },
                      "user_id": {
                        "type": "string",
                        "example": "3241a285-8329-4d69-8f3d-316e08cf140c",
                        "description": "The unique identifier of the user"
                      },
                      "team_id": {
                        "type": "string",
                        "example": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                        "description": "The unique identifier of the team"
                      }
                    },
                    "required": [
                      "id",
                      "user_id",
                      "team_id"
                    ]
                  }
                },
                "required": [
                  "type",
                  "data"
                ],
                "example": {
                  "type": "team_permission.deleted"
                }
              }
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "operationId": "team_permission.deleted"
      }
    }
  }
}